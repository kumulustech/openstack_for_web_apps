heat_template_version: 2015-04-30

description: >
  Simple template to deploy a host via Horizon 
  This template requires a Floating IP ID for the instance that
  will be created.

parameters:
  key_name:
    type: string
    label: Key Name
    default: default
    description: Name of key-pair to be used for compute instance
    constraints:
      - custom_constraint: nova.keypair
  image:
    type: string
    label: Image Name
    default: Ubuntu-Server-14.04
    description: Image to be used for compute instance
  instance_type:
    type: string
    label: Instance Type
    default: m3.1CPU.2GB
    description: Type of instance (flavor) to be used
  network:
    type: string
    label: Network Name
    default: default-network
    description: Newtork name to assocaite server with
  public_net:
    type: string
    label: Public Network
    default: Ext-Net
    description: Newtork name for Floating IPs
  host_name:
    type: string
    label: VM host name
    default: fipid-dns-test
    constraints:
      - allowed_pattern: "[a-z]+[a-zA-Z0-9-]*"
        description: Host name must start with a lowercase character
  floating_ip_id:
    type: string
    label: ID of Floating IP

  # Perhaps it will be possible to allocate via IP address
  # In the future, in which case this param may be useful
  # Needs Liberty.
  # floating_ip:
  #   type: string
  #   label: Floating IP address ID

resources:
  cloud_tools:
    type: OS::Nova::Server
    properties:
      name: { get_param: host_name }
      key_name: { get_param: key_name }
      admin_user: ubuntu
      image: { get_param: image }
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: server_1_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            #
            # Setup an Ubuntu VM with the OpenStack Cloud Tools
            #
            echo '<html><h2>$hostname is up and running</h2></html>' > /root/index.html
            cd /root
            nohup python -m SimpleHTTPServer 80 &
          params:
            $hostname: { get_param: host_name }

  server_1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }

  # If the Liberty Neutron version is enabled, perhaps we can just
  # pass via IP address
  # server_1_floating_ip_association:
  #   type: OS::Neutron::FloatingIPAssociation
  #   properties:
  #     floating_ip_address: { get_param: floating_ip }
  #     port_id: { get_resource: server_1_port }

  server_1_floating_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_param: floating_ip_id }
      server_id: { get_resource: cloud_tools }

outputs:
  server_floating_ip:
    description: The Floating IP address of the deployed server
    value: { get_attr: [server_1_port, show] }
  server_info:
    description: values of server
    value: { get_attr: [cloud_tools, show]}
